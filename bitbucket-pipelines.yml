definitions:
  steps:
    - step: &deploy
        name: Deploy to Hetzner Server
        image: node:22-slim
        oidc: true
        script:
          - apt-get update && apt-get install -y openssh-client rsync
          
          # configura ssh
          - mkdir -p ~/.ssh
          - chmod 700 ~/.ssh
          - ssh-keyscan -H $SERVER_HOST >> ~/.ssh/known_hosts
          - (umask 077 ; echo $SSH_PRIVATE_KEY | base64 --decode > ~/.ssh/id_ed25519)
          - chmod 600 ~/.ssh/id_ed25519
          
          - |
            cat > .env << EOF
            # Database Configuration
            DB_HOST=${DB_HOST}
            DB_PORT=${DB_PORT}
            DB_USERNAME=${DB_USERNAME}
            DB_PASSWORD=${DB_PASSWORD}
            DB_NAME=${DB_NAME}
            
            # Application Configuration
            NODE_ENV=${NODE_ENV}
            EOF
          
          # dipendenze e build
          - npm ci
          - npm run build
          
          # crea directory logs
          - mkdir -p logs
          
          # rsync al server
          - |
            rsync -avz --delete \
              --exclude='.git' \
              --exclude='node_modules' \
              --exclude='src' \
              --exclude='.env*' \
              --exclude='logs' \
              --exclude='.pm2' \
              --exclude='*.log' \
              $BITBUCKET_CLONE_DIR/ $SSH_USER@$SERVER_HOST:$DEPLOY_PATH/
          
          - scp .env $SSH_USER@$SERVER_HOST:$DEPLOY_PATH/.env
          
          # esegui comandi sul server
          - |
            ssh $SSH_USER@$SERVER_HOST << 'EOF'
              cd $DEPLOY_PATH
              npm ci --only=production
              npm run migration:run
              npm run pm2:restart || npm run pm2:start
              npm run pm2:status
            EOF

pipelines:
  branches:
    #main:
      #- step: *deploy
    staging:
      - step: *deploy